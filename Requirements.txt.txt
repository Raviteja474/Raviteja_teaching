
credentials.json

107.99.42.01: [admin1,password1]
107.99.42.02: [admin2,password2]
..
...

...

html file from vishnu
Your credentials are incorrect. Please use correct credentials

______________________________________________________________________

files = .txt

16 Files, Threading module 5 threads, 

Thread 1 4 files--> Folder 1,
Thread 2 3 files--> Folder 2,
Thread 3 3 files--> Folder 3,
Thread 4 3 files--> Folder 4,
Thread 5 3 files--> Folder 5

33 files

Thread 1 7 files--> Folder 1,
Thread 2 7 files--> Folder 2,
Thread 3 7 files--> Folder 3,
Thread 4 6 files--> Folder 4,
Thread 5 6 files--> Folder 5

______________________________________________________________________
input = Location

Files, folders should delete

______________________________________________________________________
3 False,

{107.99.42.01: False
107.99.42.02:True
107.99.42.03  False
107.99.42.04:  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False
107.99.42.01  False}


output= [107.99.42.02,True]

______________________________________________________________________

Folder location --> give me how many files and folders

output: 3 folders, 6 files
______________________________________________________________________

File1.txt

India is my country..
[FAIL]: This is Firmware failure
All indians are my brothers and sisters.
I love my country.


File2.txt

India is my country..
All indians are my brothers and sisters.
I love my country.


{File1.txt:"[FAIL]: This is Firmware failure", File2.txt:"No_error"}
______________________________________________________________________

raviteja.txt
raviteja.csv
avinash.txt
bharath.txt
sumanth.txt
sumanth.csv
mahesh.txt
visu.txt

[raviteja.txt,sumanth.txt]
______________________________________________________________________

pytest 6 subtests

write python script that will run a stability file, if none of the tests fail, it should print 1 to 100........

environment_stability_1.py   2 tests fail and 3 tests pass

environment_stability_2.py  5 tests pass

print 1 to 100

"pytest environment_stability_1.py -v"  --> FAIL --> print test failed...

"pytest environment_stability_1.py -v"  --> FAIL not found --> print 1 to 100....

______________________________________________________________________

pytest priority

TC1, TC2, TC3, TC4  --> TC3, TC1, TC2, TC4

___________________________________________________

create a html file, where we should have one upload button, when we click on it , we should able to upload an excel file

__________________________________________________________________

print user name of your account


C:\Users\ravit>hostname
DESKTOP-9GPFB9P

_____________________________________________________________
subprocess/selenium

open chrome

www.facebook.com --> 3 sec
www.google.com  --> 4 sec
www.youtube.com  -->sec

___________________________________________________

psutil --> use existing

kill process 1/2
___________________________________________________________
WSR automation
_______________________________________________________


___________________________________________________________

Event driven -->  .some_extension to .txt (Backend some python has to monitor it)

Eg: watchdog sensor

Automation tanks 90% --> motor off

trigger_conval.py

while True:
    if ... conval_trigger.txt; endswith/OS
        break

URL = r"http:127....:5000/system_info"
# Flask program should run
available_machine_dict= api_consumtion(URL) // request api_url
# it will return all avaialble machine info

#{107.99.42.01:["Admin1","password1"], 107.99.42.02:["Admin2","password2"], , 107.99.42.03:["Admin3","password3"]}


qualified_machine_dict= valid_selenium_systems(available_machine_dict)

#{107.99.42.01:["Admin1","password1"], 107.99.42.02:["Admin2","password2"]}

system_pool_list = get_availaable_system_list(qualified_machine_dict)
 [107.99.42.01, 107.99.42.02]

  [192.168.12.14,107.99.42.01, 107.99.42.02]

conval_machine_list = []

 for system in system_pool_list:
    if is_pingable(system):
        conval_machine_list.append(system)

# Dell
firmware_transffer_file = get_firmware_transffer_file()
MSV_application_file =
config_file=



