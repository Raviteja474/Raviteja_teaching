Business Model:
_________________________________________________________________________________
Intel will manafacture SSD
1. Users, common people
Eg: Raviteja, Vaibhav
2. OEM (original equipement manafacture)/Laptop manafacture companies
Eg: Lenovo, Dell, Apple
3. CSP(Cloud service platform)
Eg: Oracle, Facebook
4. Data centers
Eg: Google, youtube
_________________________________________________________________________________
Terminology
_________________________________________________________________________________
Client = Micron Technology
Conval = continuous validation

_________________________________________________________________________________
Differnce between software, hardware and firmware 
_________________________________________________________________________________
software = 1.A program which performs particular task based input from user.
		   2.non-tangible(logical)
		   3.dynamic(We can change it)
		   4.Requires more system memory
Eg: MS word, beyond compare, jira, git, 
10 MB/20MB

hardware = 1.A physical device/instrument which provides physical output to physical input
		   2.tangible(physical)
		   3. static nature
		   4. No memory
Eg: Generator, fan, dynamo, torchlight

Firmware = 1. A piece code flashed into electronic device which regulates behavior and performance
		   2.non-tangible(logical)
		   3.lesser/relatively dynamic(We can change it)
		   4.Requires less system memory 
Eg: AC, washing machine, SSD, HDD, processor, Medical device
3 MB/5 MB

_____________________________________________________________
Generic/Standard:
It is universally accepted/ universally in practice across industry
Eg: Generic requirements, we will have Nvme 1.4 spec, pcie 5.0 spec, sata 1.3 specs

customer specific/adhoc:
Every customer want to add/modify/omit particular features based on their product need
hence we need to modifiy generic features.
Eg: Dell PRD(Project Requirement Document)

Feature support
______________________________________________________________________________
Generic = 2500
MI support = 200
Basic management = 100
VPD support = 200

Dell requirement: No MI support, 2500+100+200 = 2800

HP: Basic management + MI support
Generic+ MI support+ Basic managemnt+ VPD support =3000
_________________________________________________________________________________
Teams:
_________________________________________________________________________________
1.Firmware development team  => firmware file , .c  package it into (.bin)
date: June 1 -->Jul 1 .bin
2.Firmware protocol validation team  => Test suite (.py), package into .exe
		1. CICD enable u don't need .exe
date: June 1 --> jul 1 , skeleton
	  concreate developement  Jul 1 July 15
3.Driver/Framework team  ==> .c  -->.exe
	4 releases /Year
4.Framework automation team  ==>  automation task  .py
	automation 
5.System Testing team  ==> passed/failed reports, jiras
_________________________________________________________________________________


framework = 
1. Run a python script from command line.
2. Run a script in pycharm IDE
	a. debug
	b. suggestions
	c. alignment 
	d. warning , error in compile time only
	
Framework >> IDE>> command line

Samsung: MSV (Multi system Validation Platform)
Micron: QTest(Quality Test)
Intel: FAST(Firmware Automation system Testing)
	TWIDL (Tinker with Intel Driver Lab)
		
		
Test PC/Host PC = A vendor specific framwork(Samsung MSVP/Intel FAST) is installed and vendor spcific hardware(Intel adapter/gender card  Samsung adpater/PMU/switch/ gendercard) is installed, so that we can run test suites.

Local PC = developer personal laptop

_________________________________________________________________________________

Storage validation team : 
_________________________________________________________________________________
purpose:
You need to understand specification document, customer requirement and 
check firmware behavior in accordance with this.
how:
You need develop python or C++ codes on your vendor framework
Why so many tests?
	we need to cover total nvme specification document
	we should cover customer specification
_________________________________________________________________________________
Life cycle

why we need multiple systems:
1. 10000 TC , it will take almost 7 days to complete .
2. 5000 TC on dell, 7000 TC on Lenovo, you can run in parellel.
3. If you want to check on multiple capacities(1TB, 2 TB, 4 TB, 8 TB)
4. If you want to check in differnt capabilities.
5. Different platforms Linux/windows
6. Drive might brick during run 
_________________________________________________________________________________
How your managing particular tests run?

1-1000 --> test plan
			criticality/run time
.yml
nrt0  = p1
nrt   = p2
xft   = p3

1000

dell_nrt0_firmware_update.yml 1-111
dell_nrt_firmware_update.yml  111-222
dell_xft_firmware_update.yml  222-333
Lenovo_nrt0_firmware_update.yml  334-445
Lenovo_nrt_firmware_update.yml  446-550
Lenovo_xft_firmware_update.yml  551-689
Amaozon_nrt0_firmware_update.yml  690-711
Amaozon_nrt_firmware_update.yml   712-963
Amaozon_xft_firmware_update.yml  964-1000

.BDR
_________________________________________________________________________________
Types of Delivery for validation team
_________________________________________________________________________________
Test Suite Development: New validation test suite
    Owner: Customer/Manager
    requirement:
    1.coverage enhancement: If a feature support added recently from firmware, if the newly added feature don't
    have coverage from test suite to validate, we need to develop new test suites.
    2.coverage missing: Already spec compliance exist but validation team missed a portion of feature
    missed by mistake
    3.customer requirement deviate from Generic requirement


Defect:
    1. Test suite development team coding issues
        a. data you have given during might not covered all conditions,code
     How to avoid?
        proper skip conditions
    2. command library/ utility change

Task: subpart of development
    1.coverage missing: If a development takes less than half day, instead new development
    we will receive task for this.
    2. Other team collaboration: If you already setup and trying to help other team
    members or other teams
    3. Documentation: If you are documenting known issues information

Porting: Already existing code exists for one OEM/product, if another OEM/product
        going to implement it, we will port the codes.
Eg: dell --> Amazon
_________________________________________________________________________________
Types of Delivery for system automation/ITE/ team:
_________________________________________________________________________________
100 units of work

1. Automation tasks 60%

2. Hardware pool Setups  10%

    a.You should configure the total setups and dry run(1 test run to make sure hardware
                                                        correct)
    b.Configuring machines for validation/FW team
    c.Unbrick the drive with Dediprog(drive recoverable tool)

3. Conval ownership 10%
    a.We need ready the systems
    Eg: Dell conval -
    15 test plans => Estimation execution time 100 hours = 10 machines*10 hours
    1. They need to prepare 10 drives with Dell FW and connect 10 systems

4. Issue reporting(Jira dashboard) 10%
    a.Once conval(full run/cycle) is over, we need to
    re-execute/run/kick failed test cases  in other machines to make sure issue consistency.
    b. They will raise jira with logs and dumps

5. Closures and Reports 10%
    a. Once conval over share consolidated reports to stakeholders.
    b. Once reported issue fixed, run the same test again and make sure it is passing
    now with the current fix given by firmware engineer or validation team.


Environment setup:
1. python install, module installation, your system should be able to debug the client code(configuraions)
Ask project configuration document

Code walk through:
When someone joins to the team, buddy(mentor) will introduce you
1. Framework understanding
2. review process
3. different portals with access and usage

Automation project:
_________________________________________________________

json  --> dictionaries

dictionary -->.json file

.json file --> dictionary

.json read, .json creting

openpyxl--> open python MS EXcel

csv --> comma separted value

xmldict


Project 2: Release&Tools team
_______________________________________________________________________

1. Creating Test suite instller(.exe)(Inno setup)
NVMe_Test_Suite.exe -->  C:\Program Files (x86)\Samsung
.iss  --> Inno setup
a. git clone TS_OEM_Release
b. configurations 09.2022
   next month 10.2022
c. Using Inno setup .iss file, u will build and compile and create Test suite instller.exe

2. Crating Master installer(From individaul installers)(Inno setup)

Master = Test suite+ Framework+Driver
--> NVMe_Master_Suite.exe

2.1 Change list creation
change list = Change is a accumulated list of test plans, tests during last one month.

Technology: gitpython
How it works:

3. Ownership for full runs for OEM and generic ,Sharing reports to stakeholders
5. Creating jiras for failure
6. Mapping and closure(gitpython)

_________________________________________________

Ramya akka project explanation
________________________________________________
what is the product? VMWare product
Revenue genearation? cloud services ==> web application services
workspace ==> orders place ==> ERP tool
defects raising tools => Change management tool, jira
Guidelines ==> FRD = functional requirement document

Collabarations ==> BA(business Analysts) , dev team (Oracle fusion)
test -> Q --> pre production --> production

BAT = Build acceptacance testing
Baseline project = commonalities  ==> smoke test
everycycle ==> regression

____________________________________________________



























